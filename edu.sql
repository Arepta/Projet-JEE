CREATE TABLE class_level(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE field(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE courses(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    level INT UNSIGNED NULL DEFAULT NULL,
    field INT UNSIGNED NULL DEFAULT NULL,

    FOREIGN KEY fk_courses_level(level) REFERENCES class_level(id) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY fk_courses_field(field) REFERENCES field(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE programs(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    level INT UNSIGNED NULL DEFAULT NULL,

    FOREIGN KEY fk_programs_level(level) REFERENCES class_level(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE programs_content(
    program INT UNSIGNED NOT NULL,
    course INT UNSIGNED NOT NULL,

    CONSTRAINT pk_programs_content PRIMARY KEY (program,course),
    FOREIGN KEY fk_programs_content_program(program) REFERENCES programs(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY fk_programs_content_course(course) REFERENCES courses(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE class(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    title VARCHAR(100),
    program  INT UNSIGNED NOT NULL,
    size INT NOT NULL DEFAULT 30,

    FOREIGN KEY fk_class_program(program) REFERENCES programs(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE teachers(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    name VARCHAR(100),
    surname VARCHAR(100),
    field INT UNSIGNED NULL DEFAULT NULL,

    FOREIGN KEY fk_teachers_field(field) REFERENCES field(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE students(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    name VARCHAR(100),
    surname VARCHAR(100),
    dateofbirth DATE NOT NULL,
    level INT UNSIGNED NULL DEFAULT NULL,
    class INT UNSIGNED NULL DEFAULT NULL,

    FOREIGN KEY fk_students_level(level) REFERENCES class_level(id) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY fk_students_class(class) REFERENCES class(id) ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE rooms(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    size INT NOT NULL DEFAULT 30
);

CREATE TABLE schedule(
    room INT UNSIGNED NOT NULL,
    class INT UNSIGNED NOT NULL,
    teacher INT UNSIGNED NOT NULL,
    course INT UNSIGNED NOT NULL,
    start DATETIME NOT NULL,
    end DATETIME NOT NULL,

    FOREIGN KEY fk_schedule_room(room) REFERENCES rooms(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY fk_schedule_class(class) REFERENCES class(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY fk_schedule_teacher(teacher) REFERENCES teachers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY fk_schedule_course(course) REFERENCES courses(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE evaluations(
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    course INT UNSIGNED NOT NULL,
    min_score INT DEFAULT 0,
    max_score INT DEFAULT 20,
    
    FOREIGN KEY fk_evaluations_course(course) REFERENCES courses(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE results(
    evaluation INT UNSIGNED NOT NULL,
    student INT UNSIGNED NOT NULL,
    score INT DEFAULT 10,

    FOREIGN KEY fk_results_evaluation(evaluation) REFERENCES evaluations(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY fk_results_student(student) REFERENCES students(id) ON DELETE CASCADE ON UPDATE CASCADE
);